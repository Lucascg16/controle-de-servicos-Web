@using ServicoInWeb.ViewModels
@model AlterarUsuarioViewModel;
@{
    ViewData["Title"] = "Alterar usuário";
    string alerta = "Alterar o email altera a forma que o usuário acessa a plataforma";
}
<div class="form-base">
    <form asp-action="AlterarUsuario" asp-controller="Usuario" method="post">
        <div>
            <h5 class="text-sm-center">Alterar dados do Usuário</h5>
            @if (TempData["MensagemError"] is not null)
            {
                <div class="text-lg-start text-danger">
                    <p class="text-center">@TempData["MensagemError"]</p>
                </div>
            }
            @if (TempData["Sucesso"] is not null)
            {
                <div class="text-lg-start text-success">
                    <p class="text-center">@TempData["Sucesso"]</p>
                </div>
                <script>
                    setTimeout(function () {
                        window.location.href = "/Usuario/Index";
                    }, 5000);
                </script>
            }
            <input type="text" asp-for="Id" value="@Model.Id" hidden>
            <input type="text" asp-for="EmpresaId" value="@Model.EmpresaId" hidden>
            <input type="text" asp-for="UserLogedRole" hidden>
            <input type="text" asp-for="UserLogedId" hidden>
            <div class="col-lg-12">
                <label class="form-label" for="">Nome Completo</label>
                <input type="text" asp-for="Nome" class="form-control">
                <span class="text-danger">@Html.ValidationMessageFor(x => x.Nome)</span>
            </div>

            <div class="col-lg-12">
                <label class="form-label" for="">Email <i class="fa-regular fa-circle-question fa-sm"
                        data-toggle="tooltip" data-placement="right" title="@alerta"></i></label>
                <input type="text" asp-for="Email" class="form-control" placeholder="mail@mail.com">
                <span class="text-danger">@Html.ValidationMessageFor(x => x.Email)</span>
            </div>

            @if (Model.UserLogedRole == "Admin")
            {
                <div class="col-lg-12">
                    <label class="form-label" for="">Acesso</label>
                    <select class="form-select" asp-for="Role">
                        <option value="@RoleEnum.Admin" selected>Admin</option>
                        <option value="@RoleEnum.Funcionario">Funcionário</option>
                    </select>
                </div>
            }
            <div class="diviser" style="color: #f7f7f7;">
                <hr>
            </div>
            <div>
                <button class="btn btn-primary" type="submit">Alterar</button>
                @if (Model.UserLogedRole == "Admin" && Model.Id != Model.UserLogedId)
                {
                    <a class="btn btn-dark" onclick="Desativar(@Model.Id)">Desativar usuário</a>
                }
            </div>
        </div>
    </form>
</div>

<script>
    function Desativar(Id) {
        var confirma = confirm("Tem certeza que deseja desativar esse usuário, será necessário entrar em contato com o suporte para reativa-lo.");

        if (confirma == true) {
            fetch(`/usuario/DesativarUsuario?id=${Id}`, {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                }
            }).then(response => {
                if (response.ok) {
                    alert("Usuário desativado com sucesso");

                    setTimeout(function () {
                        window.location.href = "/Usuario/Index";
                    }, 3000);
                }
                if (response.status == 400) {
                    alert("Api inacessível, tente novamente mais tarde");
                }
                if (response.status == 501) {
                    alert("Algo deu errado tente novamente mais tarde");
                }
            });
        }
    }
</script>
