@using ServicoInWeb.Service;
@using ServicoInWeb.Models.Enum;
@using ServicoInWeb.ViewModels
@model ServicoViewModel;
@{
    ViewData["Title"] = "Serviços";
}
<div class="col-lg-4">
    <div class="block u-card shadow_ m-0" style="padding: 1.28rem 1.71rem">
        <div class="row">
            <div class="icon-circle col-sm-1" style="color: black; align-self: center;">
                <i class="fa-solid fa-plus"></i>
            </div>
            <div class="col">
                <span>Iniciar novo serviço</span>
                <a class="btn btn-outline-primary text-decoration-none w-100" asp-action="CriarServico"
                    asp-controller="Servico">Iniciar</a>
            </div>
        </div>
    </div>
</div>
<div class="col-12">
    <div class="row mt-4">
        <div class="col-12">
            <partial name="Pagination" model="@Model.Pagination" />
        </div>
    </div>
</div>
<div class="container">
    <form class="row" id="filterForm" method="get" asp-action="Index" asp-controller="Servico">
        <span class="form-text">Filtro de serviço</span>
        <div class="col-lg" onchange="autoSubForm()">
            <select name="flag" id="flag" asp-for="@Model.Flag" class="form-select">
                <option value="@ServicoFlagEnum.Ativo">Ativo</option>
                <option value="@ServicoFlagEnum.Cancelado">Cancelado</option>
                <option value="@ServicoFlagEnum.Finalizado">Finalizado</option>
            </select>
        </div>
        <div class="col-sm">
            <input type="text" id=nome asp-for="@Model.NomeServico" placeholder="Cliente" class="form-control">
        </div>
        <div class="col-sm-4">
            <input asp-for="@Model.Data" class="form-control" placeholder="Data do serviço" type="text" id="datepicker">
        </div>
        <div class="col-sm">
            <button class="btn btn-primary" type="submit">Filtrar</button>
        </div>
    </form>
</div>
@if (Model.Servicos.Count() != 0)
{
    <div class="container col-lg-12">
        <span class="form-text">Exibindo Serviços @Model.Flag's</span>
        <table>
            <caption>Exibindo: @Model.Servicos.Count()</caption>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Cliente</th>
                <th scope="col">Descrição</th>
                <th scope="col">Custos</th>
                <th scope="col">Orçamento Inicial</th>
                <th scope="col">Valor faturado</th>
                <th scope="col">Lucro</th>
                <th scope="col">Cancelado</th>
                <th scope="col">Criado em</th>
                <th scope="col">Finalizado em</th>
            </tr>
            @foreach (var servico in Model.Servicos)
            {
                <tr>
                    <th scope="row">@servico.Id @if (Model.Flag == ServicoFlagEnum.Ativo)
                        {
                            <a asp-action="AlterarServico" asp-controller="Servico" asp-route-id="@servico.Id"><i
                                    class="fa-regular fa-pen-to-square" style="color: black;"></i></a>
                        }
                    </th>
                    <td>@servico.Nome</td>
                    @if (servico.Descricao is null)
                    {
                        <td>--</td>
                    }
                    else
                    {
                        <td>@servico.Descricao</td>
                    }

                    @if (servico.Custos is null)
                    {
                        <td>--</td>
                    }
                    else
                    {
                        <td>R$@servico.Custos</td>
                    }

                    @if (servico.OrcamentoInicial is null)
                    {
                        <td>--</td>
                    }
                    else
                    {
                        <td>R$@servico.OrcamentoInicial</td>
                    }

                    @if (servico.ValorFaturado is null)
                    {
                        <td>--</td>
                    }
                    else
                    {
                        <td>R$@servico.ValorFaturado</td>
                    }

                    @if (servico.LucroLiquido is null)
                    {
                        <td>--</td>
                    }
                    else
                    {
                        <td>R$@servico.LucroLiquido</td>
                    }

                    @if (servico.Excluido)
                    {
                        <td>sim</td>
                    }
                    else
                    {
                        <td>Não</td>
                    }

                    <td>@servico.DataCriacao</td>

                    @if (servico.DataFinalizado is null)
                    {
                        if (servico.Excluido)
                        {
                            <td>--</td>
                        }
                        else
                        {
                            <td><button onclick="Finalizar(@servico.Id)">Finalizar</button></td>
                        }
                    }
                    else
                    {
                        <td>@servico.DataFinalizado</td>
                    }
                </tr>
            }
        </table>
    </div>
}
else
{
    <div class="container">
        <span>Nenhum serviços para mostrar nesse filtro</span>
    </div>
}

<link rel="stylesheet" href="https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<script>
    function Finalizar(id) {
        let faturamento = prompt("Por favor digite o valor pago pelo cliente na entrega do serviço");

        if (faturamento != null && faturamento != "") {
            fetch(`/Servico/FinalizarServico/?Id=${id}&Faturamento=${faturamento}`, {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
            }).then(response => {
                window.location.reload();
            })
        }
    }

    function autoSubForm(){
        document.getElementById("filterForm").submit();
    }

    $("#datepicker").datepicker({
        dateFormat: "yy-mm-dd",
        dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
        dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
        dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
        monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
        monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
        nextText: 'Proximo',
        prevText: 'Anterior'
    });

    $('#datepicker').datepicker();
</script>